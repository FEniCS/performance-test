# Copyright (C) 2005-2009 Anders Logg
#
# This file is part of DOLFIN.
#
# DOLFIN is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DOLFIN is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with DOLFIN. If not, see <http://www.gnu.org/licenses/>.
#
# The bilinear form a(u, v) and linear form L(v) for
# Poisson's equation.
#
# Compile this form with FFC: ffc -l dolfin Poisson.ufl.

forms = []
for degree in range(1, 4):
    element = FiniteElement("Lagrange", tetrahedron, degree)

    u = TrialFunction(element)
    v = TestFunction(element)
    f = Coefficient(element)
    g = Coefficient(element)

    aname = 'a' + str(degree)
    Lname = 'L' + str(degree)
    globals()[aname] = inner(grad(u), grad(v))*dx
    globals()[Lname] = f*v*dx + g*v*ds

    del u, v, f, g

    forms += [globals()[aname], globals()[Lname]]